{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to Arcaea Modding Wiki!","text":"<p>This is a (work-in-progress) centralized wiki for everything Arcaea modding related!</p> <p>Disclaimer</p> <p>Everything present in this wiki is made purely for educational and research purposes. By following anything in this wiki, you acknowledge that under no circumstances shall we be held legally responsible or liable for any consequences that may arise from your actions. No proprietary and paid assets, resources and files will be provided and must be individually obtained through official means.</p> <p>Looking for contributors!</p> <p>Arcaea Modding Wiki is looking for contributors! The wiki still needs much polishing and improving such as better reference images and such. If you want to contribute, visit the GitHub repository!</p>"},{"location":"arc-dump.html","title":"Obtaining Arcaea APK/IPA","text":"<p>Before proceeding with modding Arcaea, its APK/IPA file must be dumped from your device. Depending on your operating system, the procedure will be different.</p>"},{"location":"arc-dump.html#ios","title":"iOS","text":"<p>Before starting</p> <p>Either TrollStore or a jailbroken device is required. As a result, you will not be able to perform anything listed in here if you are using any devices that were updated to iOS 16.6.1 or newer and is not checkm8-vulnerable.</p> <p>Before proceeding, make sure you have Arcaea installed and have opened at least once.</p>"},{"location":"arc-dump.html#using-trolldecrypt","title":"Using TrollDecrypt","text":"<p>Info</p> <p>The recommended method. Works for all versions that are supported by TrollStore.</p> <p>Install TrollDecrypt onto your device using TrollStore, then open it. All apps that can be decrypted will be listed, select Arcaea and choose Yes when prompted. The decryption process will take a while. When it finishes, the resulting IPA will be available form within the app, copy it to your PC and you are done!</p>"},{"location":"arc-dump.html#using-dumpdecrypter","title":"Using DumpDecrypter","text":"<p>Info</p> <p>An alternative to TrollDecrypt for devices that is not supported by TrollStore. May not work with rootless jailbreaks (e.g. Dopamine, palera1n).</p> <p>Open Sileo or any package managers that you like, add this repository: <code>https://repo.tuandb.name.vn</code>. After that, install DumpDecrypter from it.</p> <p>Open DumpDecrypter, switch to the Settings tab and enable all available options. Then return to the AppList tab and select Arcaea, press Continue when prompted and wait for the decryption process to complete. Arcaea will automatically open and then close shortly after. When it finishes, press Go to Filza to view (Filza must be installed from the BigBoss repository beforehand) then copy the resulting IPA to your PC and you are done!</p>"},{"location":"arc-dump.html#android","title":"Android","text":"<p>Info</p> <p>Requires ADB (Android Debug Bridge) and appropriate ADB/USB drivers for your phone (not required on Linux, Windows 10 or newer will most likely do this automatically for you) installed which is included in the Android SDK by default. If you do not want to install the entire platform SDK, consider installing this.</p>"},{"location":"arc-dump.html#dumping-split-apks","title":"Dumping split APKs","text":"<p>Open Command Prompt or your favorite Terminal Emulator, then with your phone connected to your PC via USB, run <code>adb shell pm path moe.low.arc</code> to fetch all paths to Arcaea APKs, it should look like this:</p> <p></p> <p>This is called split APKs, a new simplified APK format that split an APK file to multiple smaller APKs (e.g. one APK containing the base data, one containing the actual code, one containing assets and so on...). Normally, this format will help for more efficient application installation from Google Play due to not requiring to download a huge APK file; however, this will make it hard to mod Arcaea, so we must merge them into a normal APK file before proceeding.</p> <p>Copy the path of each APK files, and run <code>adb pull &lt;path to apk&gt;</code>. Repeat this for the other APKs too.</p>"},{"location":"arc-dump.html#merging-the-apks","title":"Merging the APKs","text":"<p>Info</p> <p>A tool called SAP (Split APKs Package) will be used for this purpose. You may also be able to use any other similar functioning tools as well.</p> <p>Download and open SAP, you will be presented with an interface like this:</p> <p></p> <p>Place all of your split APKs into a folder, then click onto Directory and select that folder. If however you have a XAPK file instead, click on Archive and select that XAPK file.</p> <p>Make sure to tick the Sign checkbox, then click Start and wait as this may take a while.</p>"},{"location":"custom-charts-packs.html","title":"Adding your own charts/packs/etc...","text":"<p>Work in progress</p> <p>This page is being worked on. Contributions of any kind are much appreciated.</p> <p>Before starting</p> <p>This guide requires a functional private server already set up and running. For more details please refer to the Private Server page.</p>"},{"location":"custom-charts-packs.html#the-content-bundle","title":"The content bundle","text":"<p>Note</p> <p>Only for Arcaea 5.4.0 or newer and non-Chinese versions.</p>"},{"location":"custom-charts-packs.html#the-apkipa-file","title":"The APK/IPA file","text":"<p>Danger</p> <p>Only for Arcaea 5.3.1 or older and Chinese versions (e.g. 5.6.3c). Requires removing hash protection before modification can be done. Refer to the respective Reverse Engineering page for more details.</p>"},{"location":"custom-charts-packs.html#meta-files","title":"Meta files","text":""},{"location":"custom-charts-packs.html#server-database","title":"Server database","text":""},{"location":"custom-charts-packs.html#custom-packs","title":"Custom packs","text":""},{"location":"custom-charts-packs.html#custom-charts","title":"Custom charts","text":""},{"location":"custom-charts-packs.html#custom-courses","title":"Custom courses","text":""},{"location":"custom-charts-packs.html#custom-world-mode-maps","title":"Custom world mode maps","text":""},{"location":"offline-mod.html","title":"Reverse Engineering Arcaea","text":"<p>Before starting</p> <p>This page is being actively worked on. Content shown below may be unfinished, unpolished, out of date, or inaccurate.</p> <p>This guide is NOT beginner-friendly and you will have to figure out a lot of things yourself. Only proceed if you know what you are doing.</p> <p>About modifying instructions/NOPing</p> <p>A frequent thing you will be told to do throughout this guide is to NOP or edit an instruction. There are two main ways of doing so:</p> <ul> <li> <p>Overwriting its hex address using a hex editor. This will requires a converter that allows converting ARM instruction to hex address and vice versa. As with NOPing an instruction, overwrite its hex address with <code>1F 20 03 D5</code> for ARM64 or <code>00 F0 20 E3</code> for ARM32. This is the recommended method.</p> </li> <li> <p>Using Keypatch. This is the simplest method to directly modifying an instruction without having to touch the hex editor. Unfortunately, Keypatch has not been updated to IDA Pro 8.x (yet), and even with older versions of IDA Pro setting it up and get it to work can be quite a pain.</p> </li> </ul>"},{"location":"offline-mod.html#removing-hash-verification","title":"Removing hash verification","text":"<p>Info</p> <p>Allows making changes to the game files. Only for pre-5.4.0 and Chinese versions.</p> <p>In the Functions sub-window on the left, right click on Function name and choose Quick filter, then search for <code>.exit</code> (Android) or <code>_exit</code> (iOS).</p> <p></p> <p>Double-click onto it, and on the IDA View sub-window, press SPACE to switch to graph view. You will be presented with something like this, click onto the highlighted button to bring up the xref (cross-reference) window.</p> <p></p> <p>Choose the first (Android) or second (iOS) xref entry.</p> <p></p> <p>Note</p> <p>In case neither of entries contains what is shown below, trying looking at other entries too. Please do note that if you are modding a version of Arcaea that uses content bundle (5.4.0+), you will not be able to find it as it does not exist.</p> iOSAndroid <p>There are 9 xref entries consisting of 6 B.NE and 3 CBNZ instructions, NOP all of them until there are none left.</p> <p></p> <p>There are 6 xref entries consisting of 3 B.NE and 3 CBNZ instructions, NOP all of them until there are none left.</p> <p></p>"},{"location":"offline-mod.html#removing-lock-icon","title":"Removing lock icon","text":"<p>Info</p> <p>Remove the lock icon on locked packs. Purely for aesthetic purposes.</p> <p>Press SHIFT + F12, then ALT + T and search for <code>lock_icon</code>. Double-click onto it and xref it. After that, press TAB or F5 to view its pseudo-code, you will see something like this:</p> <p></p> <p>Find this structure and highlight <code>v132</code> (name may be different), then xref it, Choose the first entry.</p> <p></p> <p>Double-click onto the function call to view its pseudo-code. Focus on this part.</p> <p></p> <p>Highlight it then switch back to the IDA View sub-window. With synchronization enabled, modify <code>MOV  W8, 0</code> to <code>MOV  W8, 1</code>. Repeat this for both of the variables. After doing so, all <code>v3</code> variables should have <code>1</code> as its value.</p> <p></p>"},{"location":"offline-mod.html#removing-beyond-restrictions","title":"Removing beyond restrictions","text":"<p>Info</p> <p>Allows playing Beyond (BYD) difficulty on charts that have it.</p> AndroidiOS <p>I. Remove network required for playing beyond</p> <p>Go to Strings sub-window, Alt + T to search for <code>You no longer</code> string, double-click, xref the string, scroll up until you find the <code>SUBS</code> opcode like this in the image:</p> <p></p> <p>Open the Keypatcher (Ctrl + Alt + K), modify the <code>#3</code> to <code>#5</code> and press Enter.</p> <p></p> <p>II. Display Beyond difficulty</p> <p>Go to Strings sub-window, Alt + T to search for <code>songs/songlist</code> string, double-click, xref the first string, press Alt + T and type <code>temp</code> until you found this:</p> <p></p> <p>Click the <code>CMP</code> opcode and open the Keypatcher, modify the <code>#3</code> to <code>#5</code> and press Enter.</p> <p></p> <p>III. Display the Start button</p> <p>Go to Strings sub-window, Alt + T to search for <code>start.png</code> string, double-click, xref the string and find the <code>SUBS</code> opcode like this in the image:</p> <p></p> <p>Click the <code>SUBS</code> opcode and open the Keypatcher, modify the <code>#3</code> to <code>#5</code> and press Enter.</p> <p></p> <p>IV. Scan 3.aff in the apk</p> <p>Go to Strings sub-window, Alt + T to search for <code>songs/songlist</code> string, scroll up a bit to find the <code>dl_</code> string, xref the string until you found like this:</p> <p></p> <p>Click the <code>CMP</code> opcode and open the Keypatcher, modify the <code>#3</code> to <code>#5</code> and press Enter.</p> <p></p> <p>And you're done with Android!</p> <p>Press SHIFT + F12, then ALT + T and search for <code>world_unlock</code>. Continue doing so until you found exactly this:</p> <p></p> <p>Double-click onto it and xref it. Choose the last entry.</p> <p></p> <p>Scroll down a little bit until you found this.</p> <p></p> <p>Change <code>CMP  W8, #3</code> to <code>CMP  W8, #5</code>.</p> <p>While on the IDA View sub-window, press ALT + T and search for <code>dl_</code>, tick Find all occurrences and then search. Wait patiently until it completes.</p> <p></p> <p>Choose the first entry.</p> <p></p> <p>Find this part and repeat the same steps as above.</p> <p></p> <p>Return to the Strings sub-window and search for <code>You no longer have enough</code>, find exactly this and xref into it.</p> <p></p> <p>Scroll up until you found this part, then repeat the same as above.</p> <p></p> <p>Return to the Strings sub-window and search for <code>layouts/songselect/start.png</code>, xref it. After that, find this part and repeat the same steps as above.</p> <p></p>"},{"location":"offline-mod.html#patching-scenecontrol","title":"Patching scenecontrol","text":"<p>Info</p> <p>Make special charts effects (6 lanes, camera view, green arcs, etc..) work.</p> AndroidIOS <p>In the Strings sub-window, search for <code>9821191</code>, xref, F5 to open the Pseudocode sub-window and scroll down until you found this:</p> <p></p> <p>I. ArcNote (Still wondering what does it do)</p> <p>Double-click the highlighted address, Alt + T and search <code>148</code>. Tab to switch to IDA-View and see something like this:</p> Pseudocode IDA-View <p>Click on the <code>LDRB.W</code> opcode, open the Keypatcher and type <code>nop.w</code>. Do the same thing with <code>CBZ</code> opcode but use <code>nop</code>.</p> <p></p> <p>II. Camera</p> <p>Switch to Pseudocode view, Ctrl + T to search the next value <code>148</code>. Tab to switch to IDA-View and see something like this:</p> Pseudocode IDA-View <p>Click on the first <code>LDRB.W</code> opcode, open the Keypatcher and type <code>nop.w</code>. Do the same thing with <code>BEQ.W</code> opcode.</p> <p></p> <p>III. Scenecontrol</p> <p>Switch to Pseudocode view, Ctrl + T to search the next value <code>148</code>. Tab to switch to IDA-View and see something like this:</p> Pseudocode IDA-View <p>Click on the <code>LDRB.W</code> opcode, open the Keypatcher and type <code>nop.w</code>. Do the same thing with <code>CBNZ</code> opcode but use <code>nop</code>.</p> <p></p> <p>IV. Arcahv string check</p> <p>While at the Scenecontrol in Pseudocode view, scroll down until you see this:</p> <p></p> <p>Switch to IDA-View, use the Keypatcher and <code>nop.w</code> the <code>BEQ.W</code> opcode.</p> Before After <p>V. Green arc</p> <p>Switch to Pseudocode view, scroll down until you found this:</p> <p></p> <p>Double-click the highlighted address, switch to IDA-View. Click on <code>LDRB.W</code> opcode, use the Keypatcher and <code>nop.w</code> it. After that, use the Keypatcher again to modify the <code>#2</code> to <code>#10</code> or any number higher than 3 (3 is white arc but they haven't used it. Not the wide skynote in HIVEMIND -INTERLINKED- ). Do the same thing with the second <code>#2</code>.</p> Before After <p>VI. The Switch (this will be used for others as well)</p> <p>I literally don't know why lowiro do this but ok</p> <p>In the Strings sub-window, press ALT + T and search for <code>gameend</code>, double-click, xref and scroll up until you found this:</p> <p></p> <p>Double-click the highlighted address, switch to Hex View, F2 to edit and type <code>4F F0 01</code> (no spacing) then save it. It should be like this after editing:</p> <p>Hex View</p> Before After <p>IDA-View</p> Before After <p>VII. Remove Skynote and Arc restrictions (over y2.1)</p> <p>Note: Not recommended having these 2 modded because it'll mess up a part in Singularity VVVIP. See here: https://youtu.be/3SBjWP2JEXc?t=93.</p> <p>a. Skynote</p> <p>Xref The Switch, switch to IDA-View and scroll up a bit until you found this: </p> <p></p> <p>Use the Keypatcher and <code>nop.w</code> it.</p> <p></p> <p>b. Arc</p> <p>In the Pseudocode view, scroll up, xref The Skynote first address, scroll up again, xref the first address, switch to IDA-View, AND scroll down until you see this: </p> <p></p> <p>Click the 550.0, switch to Hex View, click the value <code>80</code>, press F2 to edit and type <code>ef6749</code> then save it. It should be like this after editing:</p> <p>Hex View</p> Before After <p>IDA-View (You'll need to press F5 again to see the magic)</p> Before After <p>And there we go! Android is done.</p> <p>In the Strings sub-window, search for <code>9821191</code>, xref, F5 to open the Pseudocode sub-window and scroll down until you found this:</p> <p></p> <p>I. ArcNote (Still wondering what does it do)</p> <p>Double-click the highlighted address, Alt + T and search <code>264</code>. Tab to switch to IDA-View and see something like this:</p> Pseudocode IDA-View <p>Click on the <code>LDRB</code> opcode, open the Keypatcher and type <code>nop</code>. Do the same thing with <code>CBZ</code>.</p> <p></p> <p>II. Camera</p> <p>Switch to Pseudocode view, Ctrl + T to search the next value <code>264</code>. Tab to switch to IDA-View and see something like this:</p> Pseudocode IDA-View <p>Click on the first <code>LDRB</code> opcode, open the Keypatcher and type <code>nop</code>. Do the same thing with <code>BEQ</code> opcode.</p> <p></p> <p>III. Scenecontrol</p> <p>Switch to Pseudocode view, Ctrl + T to search the next value <code>264</code>. Tab to switch to IDA-View and see something like this:</p> Pseudocode IDA-View <p>Click on the <code>LDRB</code> opcode, open the Keypatcher and type <code>nop</code>. Do the same thing with <code>CBNZ</code> opcode.</p> <p></p> <p>IV. Arcahv string check</p> <p>lowiro removed this in iOS and Android arm64 so let's ignore.</p> <p>V. Green arc</p> <p>Switch to Pseudocode view, scroll down until you found this:</p> <p></p> <p>Double-click the highlighted address, switch to IDA-View. Click on <code>LDRB</code> opcode that have <code>#0x108</code>, use the Keypatcher and <code>nop</code> it. After that, modify the first <code>CMP</code> opcode to <code>#32</code>. After that, patch <code>CINC W1, W8, NE</code> opcode to <code>CINC W1, W1, NE</code> opcode.</p> Before After <p>VI. The Switch (this will be used for others as well)</p> <p>I literally don't know why lowiro do this but ok</p> <p>In the Strings sub-window, press ALT + T and search for <code>gameend</code>, double-click, xref and scroll up until you found this:</p> <p></p> <p>Double-click the highlighted address, switch to Hex View, F2 to edit and type <code>20 00 80 52</code> (no spacing) then save it. It should be like this after editing:</p> <p>Hex View</p> Before After <p>IDA-View</p> Before After <p>VII. Remove Skynote and Arc restrictions (over y2.1)</p> <p>Note: Not recommended having these 2 modded because it'll mess up a part in Singularity VVVIP. See here: https://youtu.be/3SBjWP2JEXc?t=93.</p> <p>a. Skynote</p> <p>Xref The Switch, switch to IDA-View and scroll up a bit until you found this: </p> <p></p> <p>Use the Keypatcher to <code>nop</code> for the <code>FMOV</code> and <code>TBZ W20</code> opcode.</p> <p></p> <p>b. Arc</p> <p>In the Pseudocode view, scroll up, xref The Skynote first address, scroll up again, xref the first address, switch to IDA-View, AND scroll up until you see this: </p> <p></p> <p>Click the <code>ADRP</code>, switch to Hex View, click the second hex byte value, press F2 to edit change a digit then save it (it varies in each version of the game). It should be like this after editing:</p> <p>Hex View</p> Before After <p>IDA-View</p> Before After <p>And there we go! iOS is done.</p>"},{"location":"offline-mod.html#removing-world-mode-restrictions","title":"Removing world mode restrictions","text":"<p>Info</p> <p>Unlocks all world mode charts (even byds as well i think because it counts as a world song but it just the visual, you'll need to mod the other 3 to make it playable offline).</p> AndroidIOS <p>In the Strings sub-window, search for <code>this song is</code>, xref the second one, F5 to open the   Pseudocode sub-window and scroll up until you found this:</p> Xref Pseudocode <p>Double-click to go to the highlighted address, click the first line in Pseudocode sub-window, press Tab to move to IDA-View, switch to Hex View, press F2 and type <code>01 20 70 47</code> (no spacing) (which is MOV R0, #1 and BX LR).</p> <p>IDA-View</p> Before After <p>Hex View</p> Before After <p>In the Strings sub-window, search for <code>this song is</code>, xref the first one, F5 to open the Pseudocode sub-window and scroll up until you found this:</p> Xref Pseudocode <p>Double-click to go to the highlighted address, click the first line in Pseudocode sub-window, press Tab to move to IDA-View, switch to Hex View, press F2 and type <code>20 00 80 52 C0 03 5F D6</code> (no spacing) (which is MOV W0, #1 and RET).</p> <p>IDA-View</p> Before After <p>Hex View</p> Before After <p>Once you're done, press F2 again to save it.</p> <p>All done!</p> <p>And there you have it. Good luck modding. Post-5.4.0 will be written sooner or later.</p>"},{"location":"private-server.html","title":"Setting up your own Arcaea server","text":"<p>Before starting</p> <p>Make sure you have dumped Arcaea APK/IPA from your device before proceeding.</p>"},{"location":"private-server.html#obtaining-content-bundle","title":"Obtaining content bundle","text":"<p>Note</p> <p>Only for Arcaea 5.4.0+ and non-Chinese versions.</p> <p>Starting from Arcaea 5.4.0, the game now uses content bundle to deliver base contents such as characters and songs. You must obtain this before proceeding.</p> <p>Obtaining the content bundle will requires you to install Arcaea once and let it finish downloading the bundle (~491 MB). </p> <p>Tip</p> <p>Force quit the game AFTER the content bundle is downloaded (before file verification).</p> <p>After downloading it, steps to get the files will be different depending on your operating system</p> <ul> <li> <p>For Android, the content bundle is stored in <code>/data/data/moe.low.arc/files</code>. Root/custom recoveries (e.g. TWRP) is required to access this directory. Shizuku will not work.</p> </li> <li> <p>For iOS, the content bundle is stored in <code>/var/mobile/Containers/Data/Application/&lt;Arcaea data container ID&gt;/Library/Application Support</code>. Filza or an unsandboxed file manager is required to access this directory.</p> </li> </ul> <p>Copy the <code>dltemp</code> folder to your computer. Inside it should contain 2 files with the same filename: one with .bundle and one with .json.</p>"},{"location":"private-server.html#patching-arcaea","title":"Patching Arcaea","text":"<p>Note</p> <p>If you had already patched Arcaea, feel free to skip this section and proceed to Setting up private server.</p>"},{"location":"private-server.html#using-binary-patches","title":"Using Binary Patches","text":"<p>Before starting</p> <p>You will need a software that allows applying <code>.xdelta</code> binary patches. DeltaPatcher is used in this guide.</p> <p>Warning</p> <p>Android will receive patches for newer versions slower than iOS. As an alternative, try patching it yourself or wait until Android patches is made.</p> <p>Download the appropriate patch for your version:</p> iOSAndroid 5.6.3 <p>Download</p> 5.6.1 <p>Download</p> 5.6.3 <p>Download</p> <p>Now open DeltaPatcher, you will be presented with an interface like this:</p> <p></p> <p>Select the appropriate unmodified executable, and the appropriate patch, then press Apply patch.</p> <p>After that, you are done!</p>"},{"location":"private-server.html#manual-patching-advanced","title":"Manual patching (Advanced)","text":"<p>Before starting</p> <p>This section requires basic knowledge of disassembling as well as Googling. You will also need a disassembler with support for ELF/Mach-O arm64 executables and pseudo-code decompilation for this section. IDA Pro is used here.</p> <p>About NOP</p> <p><code>1F 20 03 D5</code> is the hex equivalent of ARM64 <code>nop</code> instruction. Overwrite a hex address with it when you want to remove a specific instruction call.</p> <p>Open the appropriate executable file for your operating system, and wait for the initial auto-analysis to complete (indicated by the status bar at the bottom showing Idle.) This process may take a while depending on your computer so please be patient.</p> <p></p> <p>After the initial auto-analysis, Press SHIFT + F12 and wait for the string list to be generated (again, this may take a while.)</p> iOS &amp; Pre-5.6.3 AndroidAndroid 5.6.3 or newer <p>In the Strings sub-window, press ALT + T and search for <code>cookieFiIe.txt</code> until you found exactly this.</p> <p></p> <p>Double-click it, and while highlighting this part, press X to perform xref (cross-reference.)</p> <p></p> <p>Choose the second xref (for Android) or the only present xref (for iOS) and press ENTER.</p> <p></p> <p>Press F5 or View &gt; Open subviews &gt; Generate pseudocode (this will not work if IDA is still analyzing the binary), wait for the decompilation to complete (may take a while) until you see something like this (may differ depending on version used but the general structure should be the same):</p> <p></p> <p>Scroll to bottom until you see this part, then highlight it by clicking onto it (names may be different but the structure should remain the same.)</p> <p></p> <p>Now switch to the Hex View sub-window, make sure it synchronizes with the Pseudo Code sub-window, and NOP it.</p> <p></p> <p>After that, make sure the entire code line is absent when re-decompiled.</p> <p>Now return to the Strings sub-window, and this time search for <code>vtvtvt</code>.</p> <p>xref it, and choose the first xref entry for iOS, or the one with <code>@PAGE</code> for Android.</p> Android iOS <p>Decompile it again, and scroll down a little bit until you see this part:</p> <p></p> <p>Highlight this part, and NOP it like above:</p> <p></p> <p>Note</p> <p>This section is a simplified and slightly adjusted version of this guide.</p> <p>Switch to the IDA View sub-window, and press Alt + I or Search &gt; Immediate value..., a window like this will show up, enter <code>408</code>, tick Find all occurrences and then search.</p> <p></p> <p>After that, you should see something like this.</p> <p></p> <p>Click Instruction to sort it, then scroll up until you found this:</p> <p></p> <p>Double-click onto it, then press TAB, F5 or View &gt; Open subviews &gt; Generate pseudo-code and you should see something like this.</p> <p></p> <p>Click onto the function name and xref it, choose the only entry in the list.</p> <p></p> <p>You will be brought to another function, this time switch back to IDA View and enable synchronization by Right click &gt; Synchronize with &gt; Pseudocode-... After that you should now see something like this, NOP the highlighted part:</p> <p></p> <p>Return to the IDA View sub-window, and press Alt + I or Search &gt; Immediate value..., enter <code>488</code>, tick Find all occurrences and then search. You will see something like this:</p> <p></p> <p>Sort it, then scroll up until you found something like this:</p> <p></p> <p>Double-click onto it, and switch to pseudo-code view and it should look like this:</p> <p></p> <p>Continue repeating the same steps as above: click onto the function name, xref it, switch to IDA View and nop the <code>BL</code> instruction.</p> <p></p> <p>After patching the executable, save the file and recompress the APK/IPA file. For Android, you must re-sign the APK file before installing it onto your device. You may now transfer and sideload it onto your device using your favorite method.</p>"},{"location":"private-server.html#setting-up-private-server","title":"Setting up private server","text":"<p>For this section, you will need:</p> <ul> <li> <p>Python 3.6 or newer.</p> </li> <li> <p>Charles (recommended), Fiddler Classic or any programs that allows redirecting HTTP requests through a proxy.</p> </li> <li> <p>Time and patience.</p> </li> </ul> <p>Warning</p> <p>Using any other OSes other than Windows for this may or may not work. You may need to figure stuff out on your own.</p> <p>First, you need to obtain the server software. We will be using Lost-MSth's Arcaea-server for this purpose. You may obtain it using <code>git</code> like this <code>git clone https://github.com/Lost-MSth/Arcaea-server -b dev</code> or by downloading the ZIP file of the <code>dev</code> branch.</p> <p></p> <p>After obtaining the server software, navigate to its directory (<code>&lt;Arcaea-server&gt;/latest version</code>), and with Python 3.6 or newer installed, run <code>pip install -m requirements.txt</code>.</p> <p>From here, certain steps may differ depending on your operating system and the proxy software you picked. We will be using iOS and Charles in this case but the same can also be done for other similarly functioning software.</p>"},{"location":"private-server.html#proxy-setup","title":"Proxy setup","text":"<p>Open Charles and you will be presented with an interface like this:</p> <p></p> <p>Press CTRL + SHIFT + L or Proxy &gt; SSL Proxying Settings and tick the Enable SSL Proxying box. After that, click Add, fill <code>*</code> for both Host and Port then press OK, after that untick the newly added box. In the end, the SSL Proxying Settings window should look like this:</p> <p></p> <p>Close that window, go to Proxy &gt; Proxy Settings and tweak it exactly like this image:</p> <p></p> <p>Navigate to the Windows tab and tick all checkboxes:</p> <p></p> <p>Close that window, and go to Help &gt; Local IP Addresses. It will look something like this:</p> <p></p> <p>Now, ignore everything with \"Virtual\" in it (as those are for Hyper-V, Wi-Fi hotspots or ad-hoc networks, all of which has nothing to do with what we are doing). Check what type of internet connection are you using (either Ethernet or Wi-Fi) and then pick the appropriate adapter. In this case, my computer is connected through Ethernet connection, and it has a Broadcom adapter, I will pick the first one.</p> <p>About local IP addresses</p> <p>This IP address is not a public IP address, and therefore cannot be accessed from other networks.</p> <p>You may now close that window and press CTRL + ALT + M or Tools &gt; Map Remote..., tick Enable Map Remote and press Add. Tweak it like this:</p> <p></p> <p>In the Map To section, the Host textbox needs to be your local IP address that you got from above, and the Port textbox is a 4 digit number that your server will be running on. Pick any numbers you want except for common ports like 8888 and the two ports that you have put in when setting up the prory above (both HTTP and SOCKS) and memorize it along with your local IP address. Press OK. The map remote interface should look like this in the end:</p> <p></p> <p>You may now close that window. At this point, the proxy is now ready. </p>"},{"location":"private-server.html#server-software","title":"Server software","text":"<p>The server software directory will look like this:</p> <p></p> <p>Copy the config.example.py file into a file named config.py and open it with your favorite text editor. </p> <p>Most of the config properties should already be self-explanatory. Below is guide for a few important parts.</p> <p>Remember that local IP address and port that you memorized not long ago? Well enter it here:</p> <p></p> <p>HOST is your local IP address and PORT is the port you have choosen earlier.</p> <p>For GAME_API_PREFIX, this will differ depending on your Arcaea version. Refer to the table below.</p> Version Prefix 5.5.6 -&gt; 5.6.3 <code>/hanami/29</code> <p></p> <p>For ALLOW_APPVERSION, remove everything inside. You may add a version to the list (e.g. <code>5.6.1</code>) if you want to restrict the server to (a) specific server.</p> <p></p> <p>For this part:</p> <p></p> <p>If you want to use link play functionality, the only variables you need to care about are LINKPLAY_HOST and LINKPLAY_AUTHENTICATION.</p> <ul> <li> <p>LINKPLAY_HOST needs to be the same as the IP address you have set in the HOST variable earlier unless the SET_LINKPLAY_SERVER_AS_SUB_PROCESS variable is set to <code>False</code>, at which you will need to specify a separate IP address for the link play server.</p> </li> <li> <p>For LINKPLAY_AUTHENTICATION, you can leave it as-is or type in anything you want.</p> </li> </ul> <p>If you do not want to use link play functionality, the LINKPLAY_HOST variable needs to be an empty string.</p> <p>For SSL_CERT and SSL_KEY, if you want to have the server running under HTTPS, you may supply an SSL certificate here if you have one (.pem and .key file).</p> <p>Warning</p> <p>Running the server under HTTPS may cause issues with downloading packs/songs.</p> <p>Adjust the rest of the config file to your own likings. Save the file after finished.</p> <p>Now go to the <code>database</code> folder and it will look like this:</p> <p></p> <p>Run the <code>database_initialize.py</code> file to generate the database. Make sure you have installed all dependencies prior to running it in order for it to work. A file named <code>arcaea_database.db</code> will be created if successful. After that, do all of these:</p> <ul> <li>Put the content bundle you have obtained above into the <code>bundle</code> folder. The actual bundle must have the <code>.cb</code> extension and the meta file must have the <code>.json</code> extension. Both must have the same filename (e.g. <code>5.6.0</code>).</li> </ul> <p>Note</p> <p>The content bundle in the server must be the same as the one existing in your Arcaea client (the metadata and content MUST match) as otherwise you will encounter issues when trying to login. If you change the content bundle in the server, the one on the client must be re-downloaded.</p> <p>To avoid issues, use the content bundle that you have obtained earlier.</p> <ul> <li>Put all charts into the <code>songs</code> folder. Each chart is a folder containing at least 3 .aff files (PST/PRS/FTR difficulties, some may also contain additional .aff files for BYD/ETR difficulties), the <code>base.ogg</code> file (the song itself), PV video (separated into video and audio files respectively EXCEPT for Arghena which only contains the video in two resolutions 720p and 1080p, one will be downloaded by Arcaea client depending on the graphic setting) and all additional files required by it.</li> </ul> <p>Note</p> <p>When attempting to play a song that is not in the default Arcaea pack, the game will prompt the player to download it from the server. If the chart folder itself or any of the required files are missing, the download will fail. All required files, song, and difficulties are defined in the <code>songlist</code> file bundled in the content bundle. For more details please refer to the respective Custom Charts &amp; Packs page.</p> <ul> <li>Make any adjustments you want to make (e.g. adding World Mode maps, adding courses, etc...)</li> </ul> <p>At this point, the server software is now ready.</p>"},{"location":"private-server.html#on-device-setup","title":"On device setup","text":"<p>Note</p> <p>Your phone and your computer (the one that runs the server) MUST be connected to the same network for the server to work. If you want to publicize your server, port forwarding or a VPS/cloud serve is required. Setting this up is (at the moment) out of scope for this guide.</p> iOSAndroid <p>Pick one of the methods you want to use.</p> Using ShadowrocketWi-Fi Proxy Settings <p>Info</p> <p>This is the recommended method; however, it involves using a paid app. Other similarly functioning proxy apps may also work with some configuration. If you do not want to install anything or simply do not wish to use a paid app, considering checking out the Wi-Fi Proxy Settings method instead.</p> <p>Firstly, install Shadowrocket onto your device.</p> <p>Now open it, and press on the + icon on the upper right of the interface. Press Type and select Socks5 (without the TLS part). In the Address field, enter your local IP address. In the Port field, enter 8889 (adjust if you have set a different port during proxy setup, specifically, the port for the SOCKS server), press Save while leaving everything else as-is. Press Global Routing and change it to Proxy, return to the main interface and enable the proxy. iOS will prompt you to allow VPN connection, press Allow and authenticate if needed. The <code>VPN</code> icon will show up on your status bar, indicating that you are now connected to the proxy. Press Connectivity Test to check if the connection is working properly.</p> <p>Info</p> <p>The alternative method. Requires re-configuration for new Wi-Fi networks.</p> <p>Open the Settings app, go to Wi-Fi settings, press the ! icon on the connected network, scroll down until you found the HTTP Proxy settings. In the Configure Proxy settings, select Manual and fill in the Server field which is your local IP address and the Port field which is 8888. Now press Save and (optionally) turn off and reconnect to your Wi-Fi network.</p> <p>Your device should now be connected to the proxy.</p> <p>On your computer, return to Charles and go to Help &gt; SSL Proxying &gt; Install Charles Root Certificate on a Mobile Device or Remote Browser. A window like this will show up:</p> <p></p> <p>Follow the steps listed in it to install the Charles certificate onto your device. You will also need to go to Settings &gt; General &gt; About &gt; Certificate Trust Settings and enable full trust for the newly added certificate for it to take affect.</p> <p>Go back to Charles and go to Help &gt; SSL Proxying &gt; Save Charles Root Certificate... Save the .pem file somewhere. Rename the .pem extension to .crt. Now transfer this file to your Android device and install it to the VPN &amp; Apps category.</p> <p>On Android, you will need to rely on a proxifier app such as VProxid or RProxid (requires root, recommended).</p> <p>After installing either of the proxifier app, open it and press the + icon, for Server IP, enter your local IP address; for Server Port, enter 8889. Scroll down a little bit and press Click to select application(s) then tick Arcaea. Now return and press the play button to start the VPN. Wait until it shows all good.</p> <p>Now your device is ready to connect to the private server!</p> <p>Note</p> <p>Disable the proxy when you have finished playing to prevent connectivity issues. The proxy will need to be re-enabled everytime you want to use the server. A dedicated 24/7 server such as a Raspberry Pi, a spare phone/computer with working shell, or a cloud server (VPS) is recommended for always-on server hosting.</p>"},{"location":"private-server.html#playing","title":"Playing","text":"<p>Return to the root directory of your server and run the <code>run.bat</code> file. It may take a while to start depending on the amount of songs you added. If the server console shows this:</p> <p></p> <p>Congratulations! Your server is now up and running! Now all that left is open Arcaea and play!</p> <p>If you see something like this, it means the server is working as intended.</p> <p></p> <p>At this point, you are basically done! Enjoy your new server!</p>"},{"location":"private-server.html#fixes-for-notable-issues","title":"Fixes for notable issues","text":"<p>The game kept prompting to update a pack despite having already downloaded it.</p> <p>-&gt; Check the song folders to see if they are named correctly and that all files (plus PV videos and audios if exists) are inside.</p> <p>Cannot download any songs.</p> <p>-&gt; Make sure the server is running under HTTP connection. For iOS, you may need to edit the <code>Info.plist</code> file using a plist editor to allow HTTP connection without a jailbreak by setting <code>NSAllowsArbitraryLoads</code> property to <code>true</code>.</p> <p></p> <p>Nothing works, even logging in.</p> <p>-&gt; Check if the <code>GAME_API_PREFIX</code> variable in the <code>config.py</code> file is set correctly. If that did not work, make sure you have set up the proxy correctly (refer to the Proxy setup and On device proxy setup section.)</p> <p>Potential system not working.</p> <p>-&gt; In order to make potential work, you will need to add the charts data onto the server database with the appropriate difficulty constant. Refer to the respective Custom Charts &amp; Packs page for more info.</p>"}]}